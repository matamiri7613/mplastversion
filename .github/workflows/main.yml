name: Deploy Flask App on Asiatek-2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask gunicorn
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # STEP 1: Prepare server directory structure
    - name: Prepare server directories
      uses: appleboy/ssh-action@master
      with:
        host: 79.127.85.198
        username: root
        password: 133976beh
        script: |
          # Create directory structure
          mkdir -p /var/www/flask-app
          mkdir -p /var/www/flask-app/templates
          mkdir -p /var/www/flask-app/static
          
          # Set proper permissions
          chmod -R 755 /var/www/flask-app
          
          # Clean old files if they exist
          rm -rf /var/www/flask-app/*

    # STEP 2: Copy application files with better error handling
    - name: Copy application files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: 79.127.85.198
        username: root
        password: 133976beh
        source: "."
        target: "/var/www/flask-app/"
        rm: false
        strip_components: 1
        overwrite: true
        tar_tmp_path: "/tmp/"
        timeout: 300s

    # STEP 3: Configure and deploy
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: 79.127.85.198
        username: root
        password: 133976beh
        timeout: 300s
        script: |
          # Navigate to app directory
          cd /var/www/flask-app
          
          # List files to verify copy was successful
          echo "Files in /var/www/flask-app:"
          ls -la
          
          # Create virtual environment if it doesn't exist
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          # Activate virtual environment and install dependencies
          source venv/bin/activate
          
          # Upgrade pip first
          pip install --upgrade pip
          
          # Install requirements
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install flask gunicorn
          fi
          
          # Stop existing service if running
          systemctl stop flask-app 2>/dev/null || true
          
          # Create systemd service
          cat > /etc/systemd/system/flask-app.service << 'EOL'
          [Unit]
          Description=Flask App Service
          After=network.target

          [Service]
          User=root
          WorkingDirectory=/var/www/flask-app
          Environment=PATH=/var/www/flask-app/venv/bin
          ExecStart=/var/www/flask-app/venv/bin/gunicorn app:app -b 127.0.0.1:8000 --workers 3 --timeout 120
          Restart=always
          RestartSec=5

          [Install]
          WantedBy=multi-user.target
          EOL
          
          # Reload systemd and enable service
          systemctl daemon-reload
          systemctl enable flask-app
          
          # Check if nginx is installed
          if ! command -v nginx &> /dev/null; then
            echo "Installing nginx..."
            apt update
            apt install -y nginx
          fi
          
          # Configure Nginx
          cat > /etc/nginx/sites-available/flask-app << 'EOL'
          server {
              listen 80;
              server_name 79.127.85.198;
              
              location / {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_connect_timeout 60s;
                  proxy_send_timeout 60s;
                  proxy_read_timeout 60s;
              }
          }
          EOL
          
          # Enable nginx site
          ln -sf /etc/nginx/sites-available/flask-app /etc/nginx/sites-enabled/
          
          # Remove default nginx site if it exists
          rm -f /etc/nginx/sites-enabled/default
          
          # Test nginx configuration
          nginx -t
          
          # Restart nginx
          systemctl restart nginx

    # STEP 4: Start the application
    - name: Start application
      uses: appleboy/ssh-action@master
      with:
        host: 79.127.85.198
        username: root
        password: 133976beh
        timeout: 120s
        script: |
          # Start the Flask application
          systemctl start flask-app
          
          # Wait a moment for service to start
          sleep 10
          
          # Check service status
          echo "=== Flask App Service Status ==="
          systemctl status flask-app --no-pager -l
          
          # Check if gunicorn is listening
          echo "=== Checking port 8000 ==="
          ss -tlnp | grep :8000 || echo "Warning: No process listening on port 8000"
          
          # Check nginx status
          echo "=== Nginx Status ==="
          systemctl status nginx --no-pager
          
          # Test the application
          echo "=== Testing application ==="
          curl -I http://localhost:8000 || echo "Local test failed"
          curl -I http://79.127.85.198 || echo "External test failed"
          
          echo "Deployment completed!"
