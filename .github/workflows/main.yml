name: Minimal Flask Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Deploy and create app directly on server
      uses: appleboy/ssh-action@master
      with:
        host: 79.127.85.198
        username: root
        password: 133976beh
        timeout: 600s
        script: |
          # Create directory
          mkdir -p /var/www/flask-app
          cd /var/www/flask-app
          
          # Create a simple Flask app (replace with your actual code)
          cat > app.py << 'EOF'
          from flask import Flask, render_template

          app = Flask(__name__)

          @app.route('/')
          def hello():
              return '<h1>Hello World! Flask app is running!</h1>'

          @app.route('/status')
          def status():
              return {'status': 'running', 'message': 'Flask app deployed successfully'}

          if __name__ == '__main__':
              app.run(debug=False, host='0.0.0.0', port=5000)
          EOF
          
          # Create requirements.txt
          cat > requirements.txt << 'EOF'
          Flask==2.3.3
          gunicorn==21.2.0
          EOF
          
          # Create virtual environment
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          # Install dependencies
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Stop existing service
          systemctl stop flask-app 2>/dev/null || true
          
          # Create systemd service
          cat > /etc/systemd/system/flask-app.service << 'SERVICE_EOF'
          [Unit]
          Description=Flask App Service
          After=network.target

          [Service]
          User=root
          WorkingDirectory=/var/www/flask-app
          Environment=PATH=/var/www/flask-app/venv/bin
          ExecStart=/var/www/flask-app/venv/bin/gunicorn app:app -b 127.0.0.1:8000 --workers 2 --timeout 120
          Restart=always
          RestartSec=5
          StandardOutput=journal
          StandardError=journal

          [Install]
          WantedBy=multi-user.target
          SERVICE_EOF
          
          # Install and configure nginx
          if ! command -v nginx &> /dev/null; then
            apt update && apt install -y nginx
          fi
          
          cat > /etc/nginx/sites-available/flask-app << 'NGINX_EOF'
          server {
              listen 80;
              server_name 79.127.85.198;
              
              location / {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
          NGINX_EOF
          
          # Enable services
          ln -sf /etc/nginx/sites-available/flask-app /etc/nginx/sites-enabled/
          rm -f /etc/nginx/sites-enabled/default
          
          systemctl daemon-reload
          systemctl enable flask-app
          systemctl restart nginx
          systemctl start flask-app
          
          # Wait and verify
          sleep 15
          
          echo "=== Flask App Status ==="
          systemctl status flask-app --no-pager
          
          echo "=== Nginx Status ==="
          systemctl status nginx --no-pager
          
          echo "=== Port Check ==="
          ss -tlnp | grep :8000
          
          echo "=== Testing App ==="
          curl -s http://localhost:8000 | head -2
          
          echo ""
          echo "✅ Deployment completed!"
          echo "🌐 Your app should be available at: http://79.127.85.198"
