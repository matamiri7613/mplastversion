name: Simple Flask Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy via SSH only
      uses: appleboy/ssh-action@master
      with:
        host: 79.127.85.198
        username: root
        password: 133976beh
        timeout: 600s
        script: |
          # Go to the app directory
          cd /var/www/flask-app 2>/dev/null || mkdir -p /var/www/flask-app
          cd /var/www/flask-app
          
          # Clone or pull the repository directly on the server
          if [ -d ".git" ]; then
            echo "Updating existing repository..."
            git pull origin main
          else
            echo "Cloning repository..."
            # You'll need to replace this with your actual repository URL
            git clone https://github.com/YOUR_USERNAME/YOUR_REPO_NAME.git .
          fi
          
          # Create virtual environment if it doesn't exist
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          # Activate virtual environment and install dependencies
          source venv/bin/activate
          pip install --upgrade pip
          
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install flask gunicorn
          fi
          
          # Stop existing service
          systemctl stop flask-app 2>/dev/null || true
          
          # Create systemd service
          cat > /etc/systemd/system/flask-app.service << 'EOL'
          [Unit]
          Description=Flask App Service
          After=network.target

          [Service]
          User=root
          WorkingDirectory=/var/www/flask-app
          Environment=PATH=/var/www/flask-app/venv/bin
          ExecStart=/var/www/flask-app/venv/bin/gunicorn app:app -b 127.0.0.1:8000 --workers 3 --timeout 120
          Restart=always
          RestartSec=5

          [Install]
          WantedBy=multi-user.target
          EOL
          
          # Install nginx if needed
          if ! command -v nginx &> /dev/null; then
            apt update && apt install -y nginx
          fi
          
          # Configure nginx
          cat > /etc/nginx/sites-available/flask-app << 'EOL'
          server {
              listen 80;
              server_name 79.127.85.198;
              
              location / {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
          EOL
          
          # Enable site and restart services
          ln -sf /etc/nginx/sites-available/flask-app /etc/nginx/sites-enabled/
          rm -f /etc/nginx/sites-enabled/default
          
          systemctl daemon-reload
          systemctl enable flask-app
          systemctl restart nginx
          systemctl start flask-app
          
          # Wait and check status
          sleep 10
          systemctl status flask-app --no-pager
          
          echo "Deployment completed!"
